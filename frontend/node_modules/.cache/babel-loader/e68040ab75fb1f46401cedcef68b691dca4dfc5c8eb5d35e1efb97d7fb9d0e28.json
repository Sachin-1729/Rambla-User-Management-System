{"ast":null,"code":"import * as React from 'react';\nimport { ZAxisContext } from '../context/ZAxisContextProvider';\nimport { useCartesianContext } from '../context/CartesianProvider/useCartesianContext';\n/**\n * Helper to select an axis definition according to its direction and id.\n */\nexport function useAxis({\n  axisDirection,\n  axisId\n}) {\n  const {\n    xAxis,\n    xAxisIds,\n    yAxis,\n    yAxisIds\n  } = useCartesianContext();\n  const {\n    zAxis,\n    zAxisIds\n  } = React.useContext(ZAxisContext);\n  switch (axisDirection) {\n    case 'x':\n      {\n        const id = typeof axisId === 'string' ? axisId : xAxisIds[axisId ?? 0];\n        return xAxis[id];\n      }\n    case 'y':\n      {\n        const id = typeof axisId === 'string' ? axisId : yAxisIds[axisId ?? 0];\n        return yAxis[id];\n      }\n    case 'z':\n    default:\n      {\n        const id = typeof axisId === 'string' ? axisId : zAxisIds[axisId ?? 0];\n        return zAxis[id];\n      }\n  }\n}","map":{"version":3,"names":["React","ZAxisContext","useCartesianContext","useAxis","axisDirection","axisId","xAxis","xAxisIds","yAxis","yAxisIds","zAxis","zAxisIds","useContext","id"],"sources":["C:/Users/amris/OneDrive/Desktop/Rambla/frontend/node_modules/@mui/x-charts/esm/ChartsLegend/useAxis.js"],"sourcesContent":["import * as React from 'react';\nimport { ZAxisContext } from '../context/ZAxisContextProvider';\nimport { useCartesianContext } from '../context/CartesianProvider/useCartesianContext';\n/**\n * Helper to select an axis definition according to its direction and id.\n */\nexport function useAxis({\n  axisDirection,\n  axisId\n}) {\n  const {\n    xAxis,\n    xAxisIds,\n    yAxis,\n    yAxisIds\n  } = useCartesianContext();\n  const {\n    zAxis,\n    zAxisIds\n  } = React.useContext(ZAxisContext);\n  switch (axisDirection) {\n    case 'x':\n      {\n        const id = typeof axisId === 'string' ? axisId : xAxisIds[axisId ?? 0];\n        return xAxis[id];\n      }\n    case 'y':\n      {\n        const id = typeof axisId === 'string' ? axisId : yAxisIds[axisId ?? 0];\n        return yAxis[id];\n      }\n    case 'z':\n    default:\n      {\n        const id = typeof axisId === 'string' ? axisId : zAxisIds[axisId ?? 0];\n        return zAxis[id];\n      }\n  }\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,YAAY,QAAQ,iCAAiC;AAC9D,SAASC,mBAAmB,QAAQ,kDAAkD;AACtF;AACA;AACA;AACA,OAAO,SAASC,OAAOA,CAAC;EACtBC,aAAa;EACbC;AACF,CAAC,EAAE;EACD,MAAM;IACJC,KAAK;IACLC,QAAQ;IACRC,KAAK;IACLC;EACF,CAAC,GAAGP,mBAAmB,CAAC,CAAC;EACzB,MAAM;IACJQ,KAAK;IACLC;EACF,CAAC,GAAGX,KAAK,CAACY,UAAU,CAACX,YAAY,CAAC;EAClC,QAAQG,aAAa;IACnB,KAAK,GAAG;MACN;QACE,MAAMS,EAAE,GAAG,OAAOR,MAAM,KAAK,QAAQ,GAAGA,MAAM,GAAGE,QAAQ,CAACF,MAAM,IAAI,CAAC,CAAC;QACtE,OAAOC,KAAK,CAACO,EAAE,CAAC;MAClB;IACF,KAAK,GAAG;MACN;QACE,MAAMA,EAAE,GAAG,OAAOR,MAAM,KAAK,QAAQ,GAAGA,MAAM,GAAGI,QAAQ,CAACJ,MAAM,IAAI,CAAC,CAAC;QACtE,OAAOG,KAAK,CAACK,EAAE,CAAC;MAClB;IACF,KAAK,GAAG;IACR;MACE;QACE,MAAMA,EAAE,GAAG,OAAOR,MAAM,KAAK,QAAQ,GAAGA,MAAM,GAAGM,QAAQ,CAACN,MAAM,IAAI,CAAC,CAAC;QACtE,OAAOK,KAAK,CAACG,EAAE,CAAC;MAClB;EACJ;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}