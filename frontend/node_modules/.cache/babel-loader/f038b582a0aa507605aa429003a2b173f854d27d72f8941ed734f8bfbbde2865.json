{"ast":null,"code":"\n// import TableContainer from \"@mui/material/TableContainer\";\n// import React, { useContext, useState, useEffect } from \"react\";\n// import { styled, createTheme, ThemeProvider } from \"@mui/material/styles\";\n// import CssBaseline from \"@mui/material/CssBaseline\";\n// import Box from \"@mui/material/Box\";\n// import Toolbar from \"@mui/material/Toolbar\";\n// import Container from \"@mui/material/Container\";\n// import Paper from \"@mui/material/Paper\";\n// import Navbar from \"../../components/Navbar\";\n// import TextField from \"@mui/material/TextField\";\n// import Button from \"@mui/material/Button\";\n// import Copyright from \"../../components/Copyright\";\n// import { useNavigate } from \"react-router-dom\";\n// import Count from \"../../context/Count\";\n// import { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\n\n// const defaultTheme = createTheme();\n\n// function CreateUsers() {\n//   const [name, setName] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [role, setRole] = useState(\"\");\n//   const navigate = useNavigate();\n//   const [title, setTitle] = useContext(Count);\n//   const [selectedValue, setSelectedValue] = useState('');\n\n//   async function handlesubmit(e) {\n//     e.preventDefault();\n//     const user = {\n//       name,\n//       email,\n//       password,\n//       role_id: role,\n//     };\n\n//     try {\n//       const response = await fetch(\"http://localhost:7000/users\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify(user),\n//       });\n//       if (response.ok) {\n//         const data = await response.json();\n//         console.log(\"User created:\", data);\n//         navigate(\"/users\"); // Redirect to the desired path\n//       } else {\n//         console.error(\"Failed to create user:\", await response.text());\n//       }\n\n//       console.log(\"User created:\", response);\n//       // Handle success, e.g., reset form or show a success message\n//     } catch (error) {\n//       console.error(\"Error creating user:\", error);\n//       // Handle error, e.g., show an error message\n//     }\n//   }\n\n//   const CustomBox = styled(Box)({\n//     padding: 10,\n//   });\n//   const CustomBox_For_Form = styled(Box)({\n//     paddingTop: 50,\n//     paddingBottom: 50,\n//     paddingLeft: 100,\n//     paddingRight: 100,\n//   });\n//   useEffect(() => {\n//     setTitle(\"Create User\");\n//   }, []);\n//   const handleChange = (event) => {\n//     setSelectedValue(event.target.value);\n//     setRole(event.target.value)\n//   };\n\n//   return (\n//     <div>\n//       <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n//         <CustomBox>\n//           <TableContainer component={Paper}>\n//             <div>\n//               <CustomBox_For_Form>\n//                 <form onSubmit={handlesubmit}>\n//                   <TextField\n//                     label=\"Name\"\n//                     variant=\"outlined\"\n//                     fullWidth\n//                     margin=\"normal\"\n//                     value={name}\n//                     onChange={(e) => setName(e.target.value)}\n//                   />\n\n//                   <TextField\n//                     label=\"Email\"\n//                     variant=\"outlined\"\n//                     fullWidth\n//                     margin=\"normal\"\n//                     value={email}\n//                     onChange={(e) => setEmail(e.target.value)}\n//                   />\n//                   <TextField\n//                     label=\"Password\"\n//                     variant=\"outlined\"\n//                     fullWidth\n//                     margin=\"normal\"\n//                     value={password}\n//                     onChange={(e) => setPassword(e.target.value)}\n//                   />\n//                   <TextField\n//                     label=\"Role_id\"\n//                     variant=\"outlined\"\n//                     fullWidth\n//                     margin=\"normal\"\n//                     value={role}\n//                     onChange={(e) => setRole(e.target.value)}\n//                   />\n//                   <InputLabel id=\"dropdown-label\">Select Role</InputLabel>\n//                   <Select\n//                     labelId=\"dropdown-label\"\n//                     id=\"dropdown\"\n//                     value={selectedValue}\n//                     label=\"Select an option\"\n//                     variant=\"outlined\"\n\n//                     margin=\"normal\"\n//                     onChange={handleChange}\n\n//                   >\n//                     <MenuItem value={\"66ab2dbbe525f1294827dbcc\"}>Admin</MenuItem>\n//                     <MenuItem value={\"66ab2e0be525f1294827dbcd\"}>Landlord</MenuItem>\n//                     <MenuItem value={\"66ab2e2ee525f1294827dbce\"}>Tenants</MenuItem>\n\n//                   </Select>\n\n//                   <br />\n//                   <br />\n\n//                   <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n//                     Create User\n//                   </Button>\n//                 </form>\n//               </CustomBox_For_Form>\n//             </div>\n//           </TableContainer>\n//         </CustomBox>\n\n//         <Copyright />\n//       </Container>\n//     </div>\n//   );\n// }\n\n// import { useNavigate } from \"react-router-dom\";\n// import Count from \"../../context/Count\";\n// import { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\n\n// const defaultTheme = createTheme();\n\n// function CreateUsers() {\n//   const [name, setName] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [role, setRole] = useState(\"\");\n//   const navigate = useNavigate();\n//   const [title, setTitle] = useContext(Count);\n//   const [selectedValue, setSelectedValue] = useState('');\n\n//   async function handlesubmit(e) {\n//     e.preventDefault();\n//     const user = {\n//       name,\n//       email,\n//       password,\n//       role_id: role,\n//     };\n\n//     try {\n//       const response = await fetch(\"http://localhost:7000/users\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify(user),\n//       });\n//       if (response.ok) {\n//         const data = await response.json();\n//         console.log(\"User created:\", data);\n//         navigate(\"/users\"); // Redirect to the desired path\n//       } else {\n//         console.error(\"Failed to create user:\", await response.text());\n//       }\n\n//       console.log(\"User created:\", response);\n//       // Handle success, e.g., reset form or show a success message\n//     } catch (error) {\n//       console.error(\"Error creating user:\", error);\n//       // Handle error, e.g., show an error message\n//     }\n//   }\n\n//   const CustomBox = styled(Box)({\n//     padding: 10,\n//   });\n//   const CustomBox_For_Form = styled(Box)({\n//     paddingTop: 50,\n//     paddingBottom: 50,\n//     paddingLeft: 100,\n//     paddingRight: 100,\n//   });\n//   useEffect(() => {\n//     setTitle(\"Create User\");\n//   }, []);\n//   const handleChange = (event) => {\n//     setSelectedValue(event.target.value);\n//     setRole(event.target.value);\n//   };\n\n//   return (\n//     <div>\n//       <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n//         <CustomBox>\n//           <TableContainer component={Paper}>\n//             <div>\n//               <CustomBox_For_Form>\n//                 <form onSubmit={handlesubmit}>\n//                   <TextField\n//                     label=\"Name\"\n//                     variant=\"outlined\"\n//                     fullWidth\n//                     margin=\"normal\"\n//                     value={name}\n//                     onChange={(e) => setName(e.target.value)}\n//                   />\n\n//                   <TextField\n//                     label=\"Email\"\n//                     variant=\"outlined\"\n//                     fullWidth\n//                     margin=\"normal\"\n//                     value={email}\n//                     onChange={(e) => setEmail(e.target.value)}\n//                   />\n//                   <TextField\n//                     label=\"Password\"\n//                     variant=\"outlined\"\n//                     fullWidth\n//                     margin=\"normal\"\n//                     value={password}\n//                     onChange={(e) => setPassword(e.target.value)}\n//                   />\n\n//                   <FormControl fullWidth margin=\"normal\">\n//                     <InputLabel id=\"dropdown-label\">Select Role</InputLabel>\n//                     <Select\n//                       labelId=\"dropdown-label\"\n//                       id=\"dropdown\"\n//                       value={selectedValue}\n//                       label=\"Select Role\"\n//                       onChange={handleChange}\n//                     >\n//                       <MenuItem value={\"66ab2dbbe525f1294827dbcc\"}>Admin</MenuItem>\n//                       <MenuItem value={\"66ab2e0be525f1294827dbcd\"}>Landlord</MenuItem>\n//                       <MenuItem value={\"66ab2e2ee525f1294827dbce\"}>Tenants</MenuItem>\n//                     </Select>\n//                   </FormControl>\n\n//                   <br />\n//                   <br />\n\n//                   <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n//                     Create User\n//                   </Button>\n//                 </form>\n//               </CustomBox_For_Form>\n//             </div>\n//           </TableContainer>\n//         </CustomBox>\n\n//         <Copyright />\n//       </Container>\n//     </div>\n//   );\n// }\n\n// export default CreateUsers;\n\n// import TableContainer from \"@mui/material/TableContainer\";\n// import React, { useContext, useState, useEffect } from \"react\";\n// import { styled, createTheme } from \"@mui/material/styles\";\n\n// import Box from \"@mui/material/Box\";\n// import Container from \"@mui/material/Container\";\n// import Paper from \"@mui/material/Paper\";\n\n// import TextField from \"@mui/material/TextField\";\n// import Button from \"@mui/material/Button\";\n// import Copyright from \"../../components/Copyright\";\n// import { useNavigate } from \"react-router-dom\";\n// import Count from \"../../context/Count\";\n// import { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\n// import 'react-toastify/dist/ReactToastify.css';\n// import { toast } from 'react-toastify';\n// import { ToastContainer } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n\n// const CustomBox = styled(Box)({\n//   padding: 10,\n// });\n\n// const CustomBox_For_Form = styled(Box)({\n//   paddingTop: 50,\n//   paddingBottom: 50,\n//   paddingLeft: 100,\n//   paddingRight: 100,\n// });\n\n// function CreateUsers() {\n//   const [name, setName] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [role, setRole] = useState(\"\");\n//   const navigate = useNavigate();\n//   const [title, setTitle] = useContext(Count);\n//   const [selectedValue, setSelectedValue] = useState(\"\");\n\n//   useEffect(() => {\n//     setTitle(\"Create User\");\n//   }, [setTitle]);\n\n//   const handleChange = (event) => {\n//     setSelectedValue(event.target.value);\n//     setRole(event.target.value);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!role) {\n//       toast.error(\"Please select a role.\");\n//       return;}\n//     const user = {\n//       name,\n//       email,\n//       password,\n//       role_id: role,\n//     };\n\n//     try {\n//       const response = await fetch(\"http://localhost:7000/users\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify(user),\n//       });\n//       if (response.ok) {\n//         const data = await response.json();\n//         toast.success('User created successfully!'); // Show success toast\n//         console.log(\"User created:\", data);\n//         setTimeout(()=>{ navigate(\"/users\");},2000)\n//         // Redirect to the desired path\n//       setName('');\n//       setEmail('');\n//       setPassword('');\n//       setRole('');\n//       setSelectedValue('');\n//       } else if (!response.ok)  {\n//         const errorData = await response.json();\n//         if (errorData.message.includes('duplicate key error')) {\n//           toast.error('User already exists!'); // Show error toast for duplicates\n//         } else {\n//           toast.error(`Error: ${errorData.message}`); // Show other errors\n//         }\n//         throw new Error(errorData.message); \n\n//       }\n//     } catch (error) {\n\n//       console.error(\"Error creating user:\", error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n//         <CustomBox>\n//           <TableContainer component={Paper}>\n//             <div>\n//             <ToastContainer /> \n//               <CustomBox_For_Form>\n//                 <form onSubmit={handleSubmit}>\n//                   <TextField\n//                     label=\"Name\"\n//                     variant=\"outlined\"\n//                     fullWidth\n//                     margin=\"normal\"\n//                     value={name}\n//                     onChange={(e) => setName(e.target.value)}\n//                   />\n\n//                   <TextField\n//                     label=\"Email\"\n//                     variant=\"outlined\"\n//                     fullWidth\n//                     margin=\"normal\"\n//                     value={email}\n//                     onChange={(e) => setEmail(e.target.value)}\n//                   />\n//                   <TextField\n//                     label=\"Password\"\n//                     variant=\"outlined\"\n//                     fullWidth\n//                     margin=\"normal\"\n//                     value={password}\n//                     onChange={(e) => setPassword(e.target.value)}\n//                   />\n\n//                   <FormControl fullWidth margin=\"normal\">\n//                     <InputLabel id=\"dropdown-label\">Select Role</InputLabel>\n//                     <Select\n//                       labelId=\"dropdown-label\"\n//                       id=\"dropdown\"\n//                       value={selectedValue}\n//                       label=\"Select Role\"\n//                       onChange={handleChange}\n//                     >\n//                       <MenuItem value=\"66ab2dbbe525f1294827dbcc\">Admin</MenuItem>\n//                       <MenuItem value=\"66ab2e0be525f1294827dbcd\">Landlord</MenuItem>\n//                       <MenuItem value=\"66ab2e2ee525f1294827dbce\">Tenants</MenuItem>\n//                     </Select>\n//                   </FormControl>\n\n//                   <br />\n//                   <br />\n\n//                   <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n//                     Create User\n//                   </Button>\n//                 </form>\n//               </CustomBox_For_Form>\n//             </div>\n//           </TableContainer>\n//         </CustomBox>\n\n//         <Copyright />\n//       </Container>\n//     </div>\n//   );\n// }\n\n// export default CreateUsers;","map":{"version":3,"names":[],"sources":["C:/Users/amris/OneDrive/Desktop/Rambla/frontend/src/pages/users/Createuser.jsx"],"sourcesContent":["\r\n// import TableContainer from \"@mui/material/TableContainer\";\r\n// import React, { useContext, useState, useEffect } from \"react\";\r\n// import { styled, createTheme, ThemeProvider } from \"@mui/material/styles\";\r\n// import CssBaseline from \"@mui/material/CssBaseline\";\r\n// import Box from \"@mui/material/Box\";\r\n// import Toolbar from \"@mui/material/Toolbar\";\r\n// import Container from \"@mui/material/Container\";\r\n// import Paper from \"@mui/material/Paper\";\r\n// import Navbar from \"../../components/Navbar\";\r\n// import TextField from \"@mui/material/TextField\";\r\n// import Button from \"@mui/material/Button\";\r\n// import Copyright from \"../../components/Copyright\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import Count from \"../../context/Count\";\r\n// import { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\n// const defaultTheme = createTheme();\r\n\r\n// function CreateUsers() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [role, setRole] = useState(\"\");\r\n//   const navigate = useNavigate();\r\n//   const [title, setTitle] = useContext(Count);\r\n//   const [selectedValue, setSelectedValue] = useState('');\r\n\r\n//   async function handlesubmit(e) {\r\n//     e.preventDefault();\r\n//     const user = {\r\n//       name,\r\n//       email,\r\n//       password,\r\n//       role_id: role,\r\n//     };\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:7000/users\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify(user),\r\n//       });\r\n//       if (response.ok) {\r\n//         const data = await response.json();\r\n//         console.log(\"User created:\", data);\r\n//         navigate(\"/users\"); // Redirect to the desired path\r\n//       } else {\r\n//         console.error(\"Failed to create user:\", await response.text());\r\n//       }\r\n\r\n//       console.log(\"User created:\", response);\r\n//       // Handle success, e.g., reset form or show a success message\r\n//     } catch (error) {\r\n//       console.error(\"Error creating user:\", error);\r\n//       // Handle error, e.g., show an error message\r\n//     }\r\n//   }\r\n\r\n//   const CustomBox = styled(Box)({\r\n//     padding: 10,\r\n//   });\r\n//   const CustomBox_For_Form = styled(Box)({\r\n//     paddingTop: 50,\r\n//     paddingBottom: 50,\r\n//     paddingLeft: 100,\r\n//     paddingRight: 100,\r\n//   });\r\n//   useEffect(() => {\r\n//     setTitle(\"Create User\");\r\n//   }, []);\r\n//   const handleChange = (event) => {\r\n//     setSelectedValue(event.target.value);\r\n//     setRole(event.target.value)\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n//         <CustomBox>\r\n//           <TableContainer component={Paper}>\r\n//             <div>\r\n//               <CustomBox_For_Form>\r\n//                 <form onSubmit={handlesubmit}>\r\n//                   <TextField\r\n//                     label=\"Name\"\r\n//                     variant=\"outlined\"\r\n//                     fullWidth\r\n//                     margin=\"normal\"\r\n//                     value={name}\r\n//                     onChange={(e) => setName(e.target.value)}\r\n//                   />\r\n\r\n//                   <TextField\r\n//                     label=\"Email\"\r\n//                     variant=\"outlined\"\r\n//                     fullWidth\r\n//                     margin=\"normal\"\r\n//                     value={email}\r\n//                     onChange={(e) => setEmail(e.target.value)}\r\n//                   />\r\n//                   <TextField\r\n//                     label=\"Password\"\r\n//                     variant=\"outlined\"\r\n//                     fullWidth\r\n//                     margin=\"normal\"\r\n//                     value={password}\r\n//                     onChange={(e) => setPassword(e.target.value)}\r\n//                   />\r\n//                   <TextField\r\n//                     label=\"Role_id\"\r\n//                     variant=\"outlined\"\r\n//                     fullWidth\r\n//                     margin=\"normal\"\r\n//                     value={role}\r\n//                     onChange={(e) => setRole(e.target.value)}\r\n//                   />\r\n//                   <InputLabel id=\"dropdown-label\">Select Role</InputLabel>\r\n//                   <Select\r\n//                     labelId=\"dropdown-label\"\r\n//                     id=\"dropdown\"\r\n//                     value={selectedValue}\r\n//                     label=\"Select an option\"\r\n//                     variant=\"outlined\"\r\n                  \r\n//                     margin=\"normal\"\r\n//                     onChange={handleChange}\r\n                    \r\n//                   >\r\n//                     <MenuItem value={\"66ab2dbbe525f1294827dbcc\"}>Admin</MenuItem>\r\n//                     <MenuItem value={\"66ab2e0be525f1294827dbcd\"}>Landlord</MenuItem>\r\n//                     <MenuItem value={\"66ab2e2ee525f1294827dbce\"}>Tenants</MenuItem>\r\n                    \r\n//                   </Select>\r\n\r\n//                   <br />\r\n//                   <br />\r\n\r\n//                   <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n//                     Create User\r\n//                   </Button>\r\n//                 </form>\r\n//               </CustomBox_For_Form>\r\n//             </div>\r\n//           </TableContainer>\r\n//         </CustomBox>\r\n\r\n//         <Copyright />\r\n//       </Container>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import Count from \"../../context/Count\";\r\n// import { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\n// const defaultTheme = createTheme();\r\n\r\n// function CreateUsers() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [role, setRole] = useState(\"\");\r\n//   const navigate = useNavigate();\r\n//   const [title, setTitle] = useContext(Count);\r\n//   const [selectedValue, setSelectedValue] = useState('');\r\n\r\n//   async function handlesubmit(e) {\r\n//     e.preventDefault();\r\n//     const user = {\r\n//       name,\r\n//       email,\r\n//       password,\r\n//       role_id: role,\r\n//     };\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:7000/users\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify(user),\r\n//       });\r\n//       if (response.ok) {\r\n//         const data = await response.json();\r\n//         console.log(\"User created:\", data);\r\n//         navigate(\"/users\"); // Redirect to the desired path\r\n//       } else {\r\n//         console.error(\"Failed to create user:\", await response.text());\r\n//       }\r\n\r\n//       console.log(\"User created:\", response);\r\n//       // Handle success, e.g., reset form or show a success message\r\n//     } catch (error) {\r\n//       console.error(\"Error creating user:\", error);\r\n//       // Handle error, e.g., show an error message\r\n//     }\r\n//   }\r\n\r\n//   const CustomBox = styled(Box)({\r\n//     padding: 10,\r\n//   });\r\n//   const CustomBox_For_Form = styled(Box)({\r\n//     paddingTop: 50,\r\n//     paddingBottom: 50,\r\n//     paddingLeft: 100,\r\n//     paddingRight: 100,\r\n//   });\r\n//   useEffect(() => {\r\n//     setTitle(\"Create User\");\r\n//   }, []);\r\n//   const handleChange = (event) => {\r\n//     setSelectedValue(event.target.value);\r\n//     setRole(event.target.value);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n//         <CustomBox>\r\n//           <TableContainer component={Paper}>\r\n//             <div>\r\n//               <CustomBox_For_Form>\r\n//                 <form onSubmit={handlesubmit}>\r\n//                   <TextField\r\n//                     label=\"Name\"\r\n//                     variant=\"outlined\"\r\n//                     fullWidth\r\n//                     margin=\"normal\"\r\n//                     value={name}\r\n//                     onChange={(e) => setName(e.target.value)}\r\n//                   />\r\n\r\n//                   <TextField\r\n//                     label=\"Email\"\r\n//                     variant=\"outlined\"\r\n//                     fullWidth\r\n//                     margin=\"normal\"\r\n//                     value={email}\r\n//                     onChange={(e) => setEmail(e.target.value)}\r\n//                   />\r\n//                   <TextField\r\n//                     label=\"Password\"\r\n//                     variant=\"outlined\"\r\n//                     fullWidth\r\n//                     margin=\"normal\"\r\n//                     value={password}\r\n//                     onChange={(e) => setPassword(e.target.value)}\r\n//                   />\r\n\r\n//                   <FormControl fullWidth margin=\"normal\">\r\n//                     <InputLabel id=\"dropdown-label\">Select Role</InputLabel>\r\n//                     <Select\r\n//                       labelId=\"dropdown-label\"\r\n//                       id=\"dropdown\"\r\n//                       value={selectedValue}\r\n//                       label=\"Select Role\"\r\n//                       onChange={handleChange}\r\n//                     >\r\n//                       <MenuItem value={\"66ab2dbbe525f1294827dbcc\"}>Admin</MenuItem>\r\n//                       <MenuItem value={\"66ab2e0be525f1294827dbcd\"}>Landlord</MenuItem>\r\n//                       <MenuItem value={\"66ab2e2ee525f1294827dbce\"}>Tenants</MenuItem>\r\n//                     </Select>\r\n//                   </FormControl>\r\n\r\n//                   <br />\r\n//                   <br />\r\n\r\n//                   <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n//                     Create User\r\n//                   </Button>\r\n//                 </form>\r\n//               </CustomBox_For_Form>\r\n//             </div>\r\n//           </TableContainer>\r\n//         </CustomBox>\r\n\r\n//         <Copyright />\r\n//       </Container>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default CreateUsers;\r\n\r\n// import TableContainer from \"@mui/material/TableContainer\";\r\n// import React, { useContext, useState, useEffect } from \"react\";\r\n// import { styled, createTheme } from \"@mui/material/styles\";\r\n\r\n// import Box from \"@mui/material/Box\";\r\n// import Container from \"@mui/material/Container\";\r\n// import Paper from \"@mui/material/Paper\";\r\n\r\n// import TextField from \"@mui/material/TextField\";\r\n// import Button from \"@mui/material/Button\";\r\n// import Copyright from \"../../components/Copyright\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import Count from \"../../context/Count\";\r\n// import { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n// import 'react-toastify/dist/ReactToastify.css';\r\n// import { toast } from 'react-toastify';\r\n// import { ToastContainer } from 'react-toastify';\r\n// import 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n\r\n// const CustomBox = styled(Box)({\r\n//   padding: 10,\r\n// });\r\n\r\n// const CustomBox_For_Form = styled(Box)({\r\n//   paddingTop: 50,\r\n//   paddingBottom: 50,\r\n//   paddingLeft: 100,\r\n//   paddingRight: 100,\r\n// });\r\n\r\n// function CreateUsers() {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [role, setRole] = useState(\"\");\r\n//   const navigate = useNavigate();\r\n//   const [title, setTitle] = useContext(Count);\r\n//   const [selectedValue, setSelectedValue] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//     setTitle(\"Create User\");\r\n//   }, [setTitle]);\r\n\r\n//   const handleChange = (event) => {\r\n//     setSelectedValue(event.target.value);\r\n//     setRole(event.target.value);\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!role) {\r\n//       toast.error(\"Please select a role.\");\r\n//       return;}\r\n//     const user = {\r\n//       name,\r\n//       email,\r\n//       password,\r\n//       role_id: role,\r\n//     };\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:7000/users\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify(user),\r\n//       });\r\n//       if (response.ok) {\r\n//         const data = await response.json();\r\n//         toast.success('User created successfully!'); // Show success toast\r\n//         console.log(\"User created:\", data);\r\n//         setTimeout(()=>{ navigate(\"/users\");},2000)\r\n//         // Redirect to the desired path\r\n//       setName('');\r\n//       setEmail('');\r\n//       setPassword('');\r\n//       setRole('');\r\n//       setSelectedValue('');\r\n//       } else if (!response.ok)  {\r\n//         const errorData = await response.json();\r\n//         if (errorData.message.includes('duplicate key error')) {\r\n//           toast.error('User already exists!'); // Show error toast for duplicates\r\n//         } else {\r\n//           toast.error(`Error: ${errorData.message}`); // Show other errors\r\n//         }\r\n//         throw new Error(errorData.message); \r\n        \r\n//       }\r\n//     } catch (error) {\r\n     \r\n      \r\n//       console.error(\"Error creating user:\", error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n//         <CustomBox>\r\n//           <TableContainer component={Paper}>\r\n//             <div>\r\n//             <ToastContainer /> \r\n//               <CustomBox_For_Form>\r\n//                 <form onSubmit={handleSubmit}>\r\n//                   <TextField\r\n//                     label=\"Name\"\r\n//                     variant=\"outlined\"\r\n//                     fullWidth\r\n//                     margin=\"normal\"\r\n//                     value={name}\r\n//                     onChange={(e) => setName(e.target.value)}\r\n//                   />\r\n\r\n//                   <TextField\r\n//                     label=\"Email\"\r\n//                     variant=\"outlined\"\r\n//                     fullWidth\r\n//                     margin=\"normal\"\r\n//                     value={email}\r\n//                     onChange={(e) => setEmail(e.target.value)}\r\n//                   />\r\n//                   <TextField\r\n//                     label=\"Password\"\r\n//                     variant=\"outlined\"\r\n//                     fullWidth\r\n//                     margin=\"normal\"\r\n//                     value={password}\r\n//                     onChange={(e) => setPassword(e.target.value)}\r\n//                   />\r\n\r\n//                   <FormControl fullWidth margin=\"normal\">\r\n//                     <InputLabel id=\"dropdown-label\">Select Role</InputLabel>\r\n//                     <Select\r\n//                       labelId=\"dropdown-label\"\r\n//                       id=\"dropdown\"\r\n//                       value={selectedValue}\r\n//                       label=\"Select Role\"\r\n//                       onChange={handleChange}\r\n//                     >\r\n//                       <MenuItem value=\"66ab2dbbe525f1294827dbcc\">Admin</MenuItem>\r\n//                       <MenuItem value=\"66ab2e0be525f1294827dbcd\">Landlord</MenuItem>\r\n//                       <MenuItem value=\"66ab2e2ee525f1294827dbce\">Tenants</MenuItem>\r\n//                     </Select>\r\n//                   </FormControl>\r\n\r\n//                   <br />\r\n//                   <br />\r\n\r\n//                   <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n//                     Create User\r\n//                   </Button>\r\n//                 </form>\r\n//               </CustomBox_For_Form>\r\n//             </div>\r\n//           </TableContainer>\r\n//         </CustomBox>\r\n\r\n//         <Copyright />\r\n//       </Container>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default CreateUsers;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}