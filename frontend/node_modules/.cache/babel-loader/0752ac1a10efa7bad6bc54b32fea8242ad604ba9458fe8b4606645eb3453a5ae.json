{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amris\\\\OneDrive\\\\Desktop\\\\Rambla\\\\frontend\\\\src\\\\components\\\\providers\\\\AuthProvider.js\",\n  _s = $RefreshSig$();\n// import React, { createContext, useState } from 'react';\n\n// export const AuthContext = createContext();\n\n// export const AuthProvider = ({ children }) => {\n//   const [user, setUser] = useState(null);\n//   const login = (userData) => {\n//     setUser(userData);\n//     localStorage.setItem('authToken', userData.token); // Simulate storing a token\n//   };\n//   const logout = () => {\n//     setUser(null);\n//     localStorage.removeItem('authToken');\n//   };\n//   return (\n//     <AuthContext.Provider value={{ user, login, logout }}>\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    // Attempt to restore user from localStorage on initial load\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      // Simulate fetching user info based on token\n      setUser({\n        token\n      }); // Replace with actual user data fetching\n    }\n  }, []);\n  const login = userData => {\n    try {\n      setUser(userData);\n      localStorage.setItem('authToken', userData.token); // Store token\n    } catch (error) {\n      console.error('Login error:', error);\n    }\n  };\n  const logout = () => {\n    try {\n      setUser(null);\n      localStorage.removeItem('authToken'); // Clear token\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","localStorage","getItem","login","userData","setItem","error","console","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/amris/OneDrive/Desktop/Rambla/frontend/src/components/providers/AuthProvider.js"],"sourcesContent":["// import React, { createContext, useState } from 'react';\r\n\r\n// export const AuthContext = createContext();\r\n\r\n// export const AuthProvider = ({ children }) => {\r\n//   const [user, setUser] = useState(null);\r\n//   const login = (userData) => {\r\n//     setUser(userData);\r\n//     localStorage.setItem('authToken', userData.token); // Simulate storing a token\r\n//   };\r\n//   const logout = () => {\r\n//     setUser(null);\r\n//     localStorage.removeItem('authToken');\r\n//   };\r\n//   return (\r\n//     <AuthContext.Provider value={{ user, login, logout }}>\r\n//       {children}\r\n//     </AuthContext.Provider>\r\n//   );\r\n// };\r\n\r\nimport React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Attempt to restore user from localStorage on initial load\r\n    const token = localStorage.getItem('authToken');\r\n    if (token) {\r\n      // Simulate fetching user info based on token\r\n      setUser({ token }); // Replace with actual user data fetching\r\n    }\r\n  }, []);\r\n\r\n  const login = (userData) => {\r\n    try {\r\n      setUser(userData);\r\n      localStorage.setItem('authToken', userData.token); // Store token\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    try {\r\n      setUser(null);\r\n      localStorage.removeItem('authToken'); // Clear token\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,IAAIF,KAAK,EAAE;MACT;MACAD,OAAO,CAAC;QAAEC;MAAM,CAAC,CAAC,CAAC,CAAC;IACtB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,KAAK,GAAIC,QAAQ,IAAK;IAC1B,IAAI;MACFL,OAAO,CAACK,QAAQ,CAAC;MACjBH,YAAY,CAACI,OAAO,CAAC,WAAW,EAAED,QAAQ,CAACJ,KAAK,CAAC,CAAC,CAAC;IACrD,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACtC;EACF,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnB,IAAI;MACFT,OAAO,CAAC,IAAI,CAAC;MACbE,YAAY,CAACQ,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC;IACxC,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACvC;EACF,CAAC;EAED,oBACEb,OAAA,CAACC,WAAW,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAAEb,IAAI;MAAEK,KAAK;MAAEK;IAAO,CAAE;IAAAZ,QAAA,EAClDA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAClB,EAAA,CAnCWF,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}