{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"label\"];\nexport function legendItemPlacements(itemsToDisplay, getItemSpace, labelStyle, direction, availableWidth, availableHeight, itemGap) {\n  // Start at 0, 0. Will be modified later by padding and position.\n  let x = 0;\n  let y = 0;\n\n  // total values used to align legend later.\n  let totalWidthUsed = 0;\n  let totalHeightUsed = 0;\n  let rowIndex = 0;\n  const rowMaxHeight = [0];\n  const seriesWithRawPosition = itemsToDisplay.map(_ref => {\n    let {\n        label\n      } = _ref,\n      other = _objectWithoutPropertiesLoose(_ref, _excluded);\n    const itemSpace = getItemSpace(label, labelStyle);\n    const rep = _extends({}, other, {\n      label,\n      positionX: x,\n      positionY: y,\n      innerHeight: itemSpace.innerHeight,\n      innerWidth: itemSpace.innerWidth,\n      outerHeight: itemSpace.outerHeight,\n      outerWidth: itemSpace.outerWidth,\n      rowIndex\n    });\n    if (direction === 'row') {\n      if (x + itemSpace.innerWidth > availableWidth) {\n        // This legend item would create overflow along the x-axis, so we start a new row.\n        x = 0;\n        y += rowMaxHeight[rowIndex];\n        rowIndex += 1;\n        if (rowMaxHeight.length <= rowIndex) {\n          rowMaxHeight.push(0);\n        }\n        rep.positionX = x;\n        rep.positionY = y;\n        rep.rowIndex = rowIndex;\n      }\n      totalWidthUsed = Math.max(totalWidthUsed, x + itemSpace.outerWidth);\n      totalHeightUsed = Math.max(totalHeightUsed, y + itemSpace.outerHeight);\n      rowMaxHeight[rowIndex] = Math.max(rowMaxHeight[rowIndex], itemSpace.outerHeight);\n      x += itemSpace.outerWidth;\n    }\n    if (direction === 'column') {\n      if (y + itemSpace.innerHeight > availableHeight) {\n        // This legend item would create overflow along the y-axis, so we start a new column.\n        x = totalWidthUsed + itemGap;\n        y = 0;\n        rowIndex = 0;\n        rep.positionX = x;\n        rep.positionY = y;\n        rep.rowIndex = rowIndex;\n      }\n      if (rowMaxHeight.length <= rowIndex) {\n        rowMaxHeight.push(0);\n      }\n      totalWidthUsed = Math.max(totalWidthUsed, x + itemSpace.outerWidth);\n      totalHeightUsed = Math.max(totalHeightUsed, y + itemSpace.outerHeight);\n      rowIndex += 1;\n      y += itemSpace.outerHeight;\n    }\n    return rep;\n  });\n  return [seriesWithRawPosition.map(item => _extends({}, item, {\n    positionY: item.positionY + (direction === 'row' ? rowMaxHeight[item.rowIndex] / 2 // Get the center of the entire row\n    : item.outerHeight / 2) // Get the center of the item\n  })), totalWidthUsed, totalHeightUsed];\n}","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","legendItemPlacements","itemsToDisplay","getItemSpace","labelStyle","direction","availableWidth","availableHeight","itemGap","x","y","totalWidthUsed","totalHeightUsed","rowIndex","rowMaxHeight","seriesWithRawPosition","map","_ref","label","other","itemSpace","rep","positionX","positionY","innerHeight","innerWidth","outerHeight","outerWidth","length","push","Math","max","item"],"sources":["C:/Users/amris/OneDrive/Desktop/Rambla/frontend/node_modules/@mui/x-charts/esm/ChartsLegend/legendItemsPlacement.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"label\"];\nexport function legendItemPlacements(itemsToDisplay, getItemSpace, labelStyle, direction, availableWidth, availableHeight, itemGap) {\n  // Start at 0, 0. Will be modified later by padding and position.\n  let x = 0;\n  let y = 0;\n\n  // total values used to align legend later.\n  let totalWidthUsed = 0;\n  let totalHeightUsed = 0;\n  let rowIndex = 0;\n  const rowMaxHeight = [0];\n  const seriesWithRawPosition = itemsToDisplay.map(_ref => {\n    let {\n        label\n      } = _ref,\n      other = _objectWithoutPropertiesLoose(_ref, _excluded);\n    const itemSpace = getItemSpace(label, labelStyle);\n    const rep = _extends({}, other, {\n      label,\n      positionX: x,\n      positionY: y,\n      innerHeight: itemSpace.innerHeight,\n      innerWidth: itemSpace.innerWidth,\n      outerHeight: itemSpace.outerHeight,\n      outerWidth: itemSpace.outerWidth,\n      rowIndex\n    });\n    if (direction === 'row') {\n      if (x + itemSpace.innerWidth > availableWidth) {\n        // This legend item would create overflow along the x-axis, so we start a new row.\n        x = 0;\n        y += rowMaxHeight[rowIndex];\n        rowIndex += 1;\n        if (rowMaxHeight.length <= rowIndex) {\n          rowMaxHeight.push(0);\n        }\n        rep.positionX = x;\n        rep.positionY = y;\n        rep.rowIndex = rowIndex;\n      }\n      totalWidthUsed = Math.max(totalWidthUsed, x + itemSpace.outerWidth);\n      totalHeightUsed = Math.max(totalHeightUsed, y + itemSpace.outerHeight);\n      rowMaxHeight[rowIndex] = Math.max(rowMaxHeight[rowIndex], itemSpace.outerHeight);\n      x += itemSpace.outerWidth;\n    }\n    if (direction === 'column') {\n      if (y + itemSpace.innerHeight > availableHeight) {\n        // This legend item would create overflow along the y-axis, so we start a new column.\n        x = totalWidthUsed + itemGap;\n        y = 0;\n        rowIndex = 0;\n        rep.positionX = x;\n        rep.positionY = y;\n        rep.rowIndex = rowIndex;\n      }\n      if (rowMaxHeight.length <= rowIndex) {\n        rowMaxHeight.push(0);\n      }\n      totalWidthUsed = Math.max(totalWidthUsed, x + itemSpace.outerWidth);\n      totalHeightUsed = Math.max(totalHeightUsed, y + itemSpace.outerHeight);\n      rowIndex += 1;\n      y += itemSpace.outerHeight;\n    }\n    return rep;\n  });\n  return [seriesWithRawPosition.map(item => _extends({}, item, {\n    positionY: item.positionY + (direction === 'row' ? rowMaxHeight[item.rowIndex] / 2 // Get the center of the entire row\n    : item.outerHeight / 2) // Get the center of the item\n  })), totalWidthUsed, totalHeightUsed];\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}