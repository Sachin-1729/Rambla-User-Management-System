{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amris\\\\OneDrive\\\\Desktop\\\\Rambla\\\\frontend\\\\src\\\\pages\\\\property\\\\CreateProperty.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useContext } from \"react\";\n// import { styled } from \"@mui/material/styles\";\n// import Box from \"@mui/material/Box\";\n// import Container from \"@mui/material/Container\";\n// import Paper from \"@mui/material/Paper\";\n// import TextField from \"@mui/material/TextField\";\n// import Button from \"@mui/material/Button\";\n// import Copyright from \"../../components/Copyright\";\n// import { useNavigate } from \"react-router-dom\";\n// import { FormControl, InputLabel, MenuItem, Select } from \"@mui/material\";\n// import \"react-toastify/dist/ReactToastify.css\";\n// import { toast } from \"react-toastify\";\n// import { ToastContainer } from \"react-toastify\";\n// import Count from \"../../context/Count\";\n\n// const CustomBox = styled(Box)({\n//   padding: 10,\n// });\n\n// const CustomBox_For_Form = styled(Box)({\n//   paddingTop: 50,\n//   paddingBottom: 50,\n//   paddingLeft: 100,\n//   paddingRight: 100,\n// });\n\n// const getToken = () => {\n//   // Retrieve the token from localStorage or context\n//   return localStorage.getItem(\"authToken\");\n// };\n\n// function CreateProperties() {\n//   const [propertyName, setPropertyName] = useState(\"\");\n//   const [propertyAddress, setPropertyAddress] = useState(\"\");\n//   const [role, setRole] = useState(\"\");\n//   const [selectedValue, setSelectedValue] = useState(\"\");\n//   const [title, setTitle] = useContext(Count);\n//   const navigate = useNavigate();\n//   const [allTenants, setAlltenants] = useState([]);\n//   const [allLandlords, setAlllandlords] = useState([]);\n\n//   useEffect(() => {\n//     setTitle(\"Create Property\");\n\n//     const pageData = async () => {\n//       const token = getToken();\n\n//       try {\n//         // Define the API URLs\n//         const apiUrl1 =\n//           \"http://localhost:7000/users?role_id=66ab2e2ee525f1294827dbce\";\n//         const apiUrl2 =\n//           \"http://localhost:7000/users?role_id=66ab2e0be525f1294827dbcd\";\n//         // Fetch data from both APIs concurrently\n//         const [response1, response2] = await Promise.all([\n//           fetch(apiUrl1, {\n//             method: \"GET\",\n//             headers: {\n//               \"Content-Type\": \"application/json\",\n//               Authorization: `Bearer ${token}`,\n//             },\n//           }),\n//           fetch(apiUrl2, {\n//             method: \"GET\",\n//             headers: {\n//               \"Content-Type\": \"application/json\",\n//               Authorization: `Bearer ${token}`,\n//             },\n//           }),\n//         ]);\n//         // Check if responses are OK\n//         if (!response1.ok || !response2.ok) {\n//           throw new Error(\"One or both of the network responses were not ok\");\n//         }\n//         // Parse JSON responses\n//         const data1 = await response1.json();\n//         const data2 = await response2.json();\n//         console.log(data1);\n//         // Update state with the fetched data\n//         setAlltenants(data1);\n//         setAlllandlords(data2);\n//       } catch (error) {\n//         // Handle errors\n//         console.error(\"Error:\", error);\n//       }\n//     };\n\n//     pageData();\n//   }, [setTitle]);\n\n//   const handleChange = (event) => {\n//     // user();\n//     // setSelectedValue(event.target.value);\n//     // setRole(event.target.value);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!role) {\n//       toast.error(\"Please select a role.\");\n//       return;\n//     }\n//     const property = {\n//       name: propertyName,\n//       address: propertyAddress,\n//       role_id: role,\n//     };\n\n//     try {\n//       const token = getToken();\n//       const response = await fetch(\"http://localhost:7000/properties\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: `Bearer ${token}`,\n//         },\n//         body: JSON.stringify(property),\n//       });\n//       if (response.ok) {\n//         toast.success(\"Property created successfully!\");\n//         setTimeout(() => {\n//           navigate(\"/properties\");\n//         }, 2000);\n//         setPropertyName(\"\");\n//         setPropertyAddress(\"\");\n//         setRole(\"\");\n//         setSelectedValue(\"\");\n//       } else {\n//         const errorData = await response.json();\n//         toast.error(`Error: ${errorData.message}`);\n//         throw new Error(errorData.message);\n//       }\n//     } catch (error) {\n//       console.error(\"Error creating property:\", error);\n//     }\n//   };\n\n//   //   const pageData = async () => {\n//   //     try {\n//   //       const token = getToken();\n//   //       const response = await fetch(\"http://localhost:7000/users\", {\n//   //         headers: {\n//   //           Authorization: `Bearer ${token}`, // Include the token in the header\n//   //         },\n//   //       });\n\n//   //       if (!response.ok) {\n//   //         throw new Error(\"Failed to fetch users\");\n//   //       }\n\n//   //       const data = await response.json();\n\n//   //       setAlltenants(data.users);\n//   //     } catch (error) {\n//   //       console.error(\"Error fetching users:\", error);\n//   //       toast.error(\"Error fetching users: \" + error.message);\n//   //     }\n//   //   };\n\n//   return (\n//     <div>\n//       <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n//         <CustomBox>\n//           <Paper>\n//             <ToastContainer />\n//             <CustomBox_For_Form>\n//               <form onSubmit={handleSubmit}>\n//                 <TextField\n//                   label=\"Property Name\"\n//                   variant=\"outlined\"\n//                   fullWidth\n//                   margin=\"normal\"\n//                   value={propertyName}\n//                   onChange={(e) => setPropertyName(e.target.value)}\n//                 />\n\n//                 <TextField\n//                   label=\"Property Address\"\n//                   variant=\"outlined\"\n//                   fullWidth\n//                   margin=\"normal\"\n//                   value={propertyAddress}\n//                   onChange={(e) => setPropertyAddress(e.target.value)}\n//                 />\n\n//                 <FormControl fullWidth margin=\"normal\">\n//                   <InputLabel id=\"dropdown-label\">Landlord</InputLabel>\n//                   <Select\n//                     labelId=\"dropdown-label\"\n//                     id=\"dropdown\"\n//                     value={selectedValue}\n//                     label=\"Select Role\"\n//                     onChange={handleChange}\n//                   >\n//                     <MenuItem value=\"66ab2e0be525f1294827dbcd\">\n//                       Landlord\n//                     </MenuItem>\n//                   </Select>\n//                 </FormControl>\n\n//                 <FormControl fullWidth margin=\"normal\">\n//                   <InputLabel id=\"dropdown-label\">Tenant</InputLabel>\n//                   <Select\n//                     labelId=\"dropdown-label\"\n//                     id=\"dropdown\"\n//                     value={selectedValue}\n//                     label=\"Select Role\"\n//                     onChange={handleChange}\n//                   >\n//                     {allTenants.map((tenant) => (\n//                       <MenuItem\n//                         // key={tenant._id} // Use the tenant's _id as the key\n//                         // value={tenant._id} // Assuming you want to set the tenant's _id as the value\n//                       >\n//                         {tenant} {/* Display the tenant's name */}\n//                       </MenuItem>\n//                     ))}\n//                   </Select>\n//                 </FormControl>\n\n//                 <br />\n//                 <br />\n\n//                 <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n//                   Create Property\n//                 </Button>\n//               </form>\n//             </CustomBox_For_Form>\n//           </Paper>\n//         </CustomBox>\n\n//         <Copyright />\n//       </Container>\n//     </div>\n//   );\n// }\n\n// export default CreateProperties;\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Container from \"@mui/material/Container\";\nimport Paper from \"@mui/material/Paper\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport Copyright from \"../../components/Copyright\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FormControl, InputLabel, MenuItem, Select } from \"@mui/material\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { toast } from \"react-toastify\";\nimport { ToastContainer } from \"react-toastify\";\nimport Count from \"../../context/Count\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomBox = styled(Box)({\n  padding: 10\n});\n_c = CustomBox;\nconst CustomBox_For_Form = styled(Box)({\n  paddingTop: 50,\n  paddingBottom: 50,\n  paddingLeft: 100,\n  paddingRight: 100\n});\n_c2 = CustomBox_For_Form;\nconst getToken = () => {\n  return localStorage.getItem(\"authToken\");\n};\nfunction CreateProperties() {\n  _s();\n  const [propertyName, setPropertyName] = useState(\"\");\n  const [propertyAddress, setPropertyAddress] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const [selectedtenant, setSelectedtenant] = useState(\"\");\n  const [selectlandlord, setselectlandlord] = useState(\"\");\n  const [title, setTitle] = useContext(Count);\n  const navigate = useNavigate();\n  const [allTenants, setAlltenants] = useState([]);\n  const [allLandlords, setAlllandlords] = useState([]);\n  useEffect(() => {\n    setTitle(\"Create Property\");\n    const pageData = async () => {\n      const token = getToken();\n      try {\n        const apiUrl1 = \"http://localhost:7000/users?role_id=66ab2e2ee525f1294827dbce\";\n        const apiUrl2 = \"http://localhost:7000/users?role_id=66ab2e0be525f1294827dbcd\";\n        const [response1, response2] = await Promise.all([fetch(apiUrl1, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          }\n        }), fetch(apiUrl2, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          }\n        })]);\n        if (!response1.ok || !response2.ok) {\n          throw new Error(\"One or both of the network responses were not ok\");\n        }\n        const data1 = await response1.json();\n        const data2 = await response2.json();\n        console.log(data1.users);\n        console.log(data2.users);\n        setAlltenants(data1.users);\n        setAlllandlords(data2.users);\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    };\n    pageData();\n  }, [setTitle]);\n  const handleChange1 = event => {\n    setSelectedtenant(event.target.value);\n  };\n  const handleChange2 = event => {\n    setselectlandlord(event.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // if (!role) {\n    //   toast.error(\"Please select a role.\");\n    //   return;\n    // }\n    const property = {\n      name: propertyName,\n      address: propertyAddress,\n      role_id: role\n    };\n    try {\n      const token = getToken();\n      const response = await fetch(\"http://localhost:7000/properties\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(property)\n      });\n      if (response.ok) {\n        toast.success(\"Property created successfully!\");\n        setTimeout(() => {\n          navigate(\"/properties\");\n        }, 2000);\n        setPropertyName(\"\");\n        setPropertyAddress(\"\");\n        setRole(\"\");\n        setSelectedValue(\"\");\n      } else {\n        const errorData = await response.json();\n        toast.error(`Error: ${errorData.message}`);\n        throw new Error(errorData.message);\n      }\n    } catch (error) {\n      console.error(\"Error creating property:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      sx: {\n        mt: 4,\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(CustomBox, {\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomBox_For_Form, {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Property Name\",\n                variant: \"outlined\",\n                fullWidth: true,\n                margin: \"normal\",\n                value: propertyName,\n                onChange: e => setPropertyName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Property Address\",\n                variant: \"outlined\",\n                fullWidth: true,\n                margin: \"normal\",\n                value: propertyAddress,\n                onChange: e => setPropertyAddress(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                margin: \"normal\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"landlord-dropdown-label\",\n                  children: \"Landlord\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"landlord-dropdown-label\",\n                  id: \"landlord-dropdown\",\n                  value: selectlandlord,\n                  label: \"Select Role\",\n                  onChange: handleChange2,\n                  children: allLandlords.map(landlord => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: landlord.role_id,\n                    children: landlord.name\n                  }, landlord._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 421,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                margin: \"normal\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"tenant-dropdown-label\",\n                  children: \"Tenant\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"tenant-dropdown-label\",\n                  id: \"tenant-dropdown\",\n                  value: selectedtenant,\n                  label: \"Select Role\",\n                  onChange: handleChange1,\n                  children: allTenants.map(tenant => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: tenant.role_id,\n                    children: tenant.name\n                  }, tenant._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                type: \"submit\",\n                children: \"Create Property\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Copyright, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 386,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateProperties, \"iA0XEqSCqLVs2LQjuabUM9PtLcs=\", false, function () {\n  return [useNavigate];\n});\n_c3 = CreateProperties;\nexport default CreateProperties;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CustomBox\");\n$RefreshReg$(_c2, \"CustomBox_For_Form\");\n$RefreshReg$(_c3, \"CreateProperties\");","map":{"version":3,"names":["React","useState","useEffect","useContext","styled","Box","Container","Paper","TextField","Button","Copyright","useNavigate","FormControl","InputLabel","MenuItem","Select","toast","ToastContainer","Count","jsxDEV","_jsxDEV","CustomBox","padding","_c","CustomBox_For_Form","paddingTop","paddingBottom","paddingLeft","paddingRight","_c2","getToken","localStorage","getItem","CreateProperties","_s","propertyName","setPropertyName","propertyAddress","setPropertyAddress","role","setRole","selectedtenant","setSelectedtenant","selectlandlord","setselectlandlord","title","setTitle","navigate","allTenants","setAlltenants","allLandlords","setAlllandlords","pageData","token","apiUrl1","apiUrl2","response1","response2","Promise","all","fetch","method","headers","Authorization","ok","Error","data1","json","data2","console","log","users","error","handleChange1","event","target","value","handleChange2","handleSubmit","e","preventDefault","property","name","address","role_id","response","body","JSON","stringify","success","setTimeout","setSelectedValue","errorData","message","children","maxWidth","sx","mt","mb","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","variant","fullWidth","margin","onChange","id","labelId","map","landlord","_id","tenant","color","type","_c3","$RefreshReg$"],"sources":["C:/Users/amris/OneDrive/Desktop/Rambla/frontend/src/pages/property/CreateProperty.jsx"],"sourcesContent":["// import React, { useState, useEffect, useContext } from \"react\";\r\n// import { styled } from \"@mui/material/styles\";\r\n// import Box from \"@mui/material/Box\";\r\n// import Container from \"@mui/material/Container\";\r\n// import Paper from \"@mui/material/Paper\";\r\n// import TextField from \"@mui/material/TextField\";\r\n// import Button from \"@mui/material/Button\";\r\n// import Copyright from \"../../components/Copyright\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import { FormControl, InputLabel, MenuItem, Select } from \"@mui/material\";\r\n// import \"react-toastify/dist/ReactToastify.css\";\r\n// import { toast } from \"react-toastify\";\r\n// import { ToastContainer } from \"react-toastify\";\r\n// import Count from \"../../context/Count\";\r\n\r\n// const CustomBox = styled(Box)({\r\n//   padding: 10,\r\n// });\r\n\r\n// const CustomBox_For_Form = styled(Box)({\r\n//   paddingTop: 50,\r\n//   paddingBottom: 50,\r\n//   paddingLeft: 100,\r\n//   paddingRight: 100,\r\n// });\r\n\r\n// const getToken = () => {\r\n//   // Retrieve the token from localStorage or context\r\n//   return localStorage.getItem(\"authToken\");\r\n// };\r\n\r\n// function CreateProperties() {\r\n//   const [propertyName, setPropertyName] = useState(\"\");\r\n//   const [propertyAddress, setPropertyAddress] = useState(\"\");\r\n//   const [role, setRole] = useState(\"\");\r\n//   const [selectedValue, setSelectedValue] = useState(\"\");\r\n//   const [title, setTitle] = useContext(Count);\r\n//   const navigate = useNavigate();\r\n//   const [allTenants, setAlltenants] = useState([]);\r\n//   const [allLandlords, setAlllandlords] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     setTitle(\"Create Property\");\r\n\r\n//     const pageData = async () => {\r\n//       const token = getToken();\r\n\r\n//       try {\r\n//         // Define the API URLs\r\n//         const apiUrl1 =\r\n//           \"http://localhost:7000/users?role_id=66ab2e2ee525f1294827dbce\";\r\n//         const apiUrl2 =\r\n//           \"http://localhost:7000/users?role_id=66ab2e0be525f1294827dbcd\";\r\n//         // Fetch data from both APIs concurrently\r\n//         const [response1, response2] = await Promise.all([\r\n//           fetch(apiUrl1, {\r\n//             method: \"GET\",\r\n//             headers: {\r\n//               \"Content-Type\": \"application/json\",\r\n//               Authorization: `Bearer ${token}`,\r\n//             },\r\n//           }),\r\n//           fetch(apiUrl2, {\r\n//             method: \"GET\",\r\n//             headers: {\r\n//               \"Content-Type\": \"application/json\",\r\n//               Authorization: `Bearer ${token}`,\r\n//             },\r\n//           }),\r\n//         ]);\r\n//         // Check if responses are OK\r\n//         if (!response1.ok || !response2.ok) {\r\n//           throw new Error(\"One or both of the network responses were not ok\");\r\n//         }\r\n//         // Parse JSON responses\r\n//         const data1 = await response1.json();\r\n//         const data2 = await response2.json();\r\n//         console.log(data1);\r\n//         // Update state with the fetched data\r\n//         setAlltenants(data1);\r\n//         setAlllandlords(data2);\r\n//       } catch (error) {\r\n//         // Handle errors\r\n//         console.error(\"Error:\", error);\r\n//       }\r\n//     };\r\n\r\n//     pageData();\r\n//   }, [setTitle]);\r\n\r\n//   const handleChange = (event) => {\r\n//     // user();\r\n//     // setSelectedValue(event.target.value);\r\n//     // setRole(event.target.value);\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!role) {\r\n//       toast.error(\"Please select a role.\");\r\n//       return;\r\n//     }\r\n//     const property = {\r\n//       name: propertyName,\r\n//       address: propertyAddress,\r\n//       role_id: role,\r\n//     };\r\n\r\n//     try {\r\n//       const token = getToken();\r\n//       const response = await fetch(\"http://localhost:7000/properties\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//           Authorization: `Bearer ${token}`,\r\n//         },\r\n//         body: JSON.stringify(property),\r\n//       });\r\n//       if (response.ok) {\r\n//         toast.success(\"Property created successfully!\");\r\n//         setTimeout(() => {\r\n//           navigate(\"/properties\");\r\n//         }, 2000);\r\n//         setPropertyName(\"\");\r\n//         setPropertyAddress(\"\");\r\n//         setRole(\"\");\r\n//         setSelectedValue(\"\");\r\n//       } else {\r\n//         const errorData = await response.json();\r\n//         toast.error(`Error: ${errorData.message}`);\r\n//         throw new Error(errorData.message);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error creating property:\", error);\r\n//     }\r\n//   };\r\n\r\n//   //   const pageData = async () => {\r\n//   //     try {\r\n//   //       const token = getToken();\r\n//   //       const response = await fetch(\"http://localhost:7000/users\", {\r\n//   //         headers: {\r\n//   //           Authorization: `Bearer ${token}`, // Include the token in the header\r\n//   //         },\r\n//   //       });\r\n\r\n//   //       if (!response.ok) {\r\n//   //         throw new Error(\"Failed to fetch users\");\r\n//   //       }\r\n\r\n//   //       const data = await response.json();\r\n\r\n//   //       setAlltenants(data.users);\r\n//   //     } catch (error) {\r\n//   //       console.error(\"Error fetching users:\", error);\r\n//   //       toast.error(\"Error fetching users: \" + error.message);\r\n//   //     }\r\n//   //   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n//         <CustomBox>\r\n//           <Paper>\r\n//             <ToastContainer />\r\n//             <CustomBox_For_Form>\r\n//               <form onSubmit={handleSubmit}>\r\n//                 <TextField\r\n//                   label=\"Property Name\"\r\n//                   variant=\"outlined\"\r\n//                   fullWidth\r\n//                   margin=\"normal\"\r\n//                   value={propertyName}\r\n//                   onChange={(e) => setPropertyName(e.target.value)}\r\n//                 />\r\n\r\n//                 <TextField\r\n//                   label=\"Property Address\"\r\n//                   variant=\"outlined\"\r\n//                   fullWidth\r\n//                   margin=\"normal\"\r\n//                   value={propertyAddress}\r\n//                   onChange={(e) => setPropertyAddress(e.target.value)}\r\n//                 />\r\n\r\n//                 <FormControl fullWidth margin=\"normal\">\r\n//                   <InputLabel id=\"dropdown-label\">Landlord</InputLabel>\r\n//                   <Select\r\n//                     labelId=\"dropdown-label\"\r\n//                     id=\"dropdown\"\r\n//                     value={selectedValue}\r\n//                     label=\"Select Role\"\r\n//                     onChange={handleChange}\r\n//                   >\r\n//                     <MenuItem value=\"66ab2e0be525f1294827dbcd\">\r\n//                       Landlord\r\n//                     </MenuItem>\r\n//                   </Select>\r\n//                 </FormControl>\r\n\r\n//                 <FormControl fullWidth margin=\"normal\">\r\n//                   <InputLabel id=\"dropdown-label\">Tenant</InputLabel>\r\n//                   <Select\r\n//                     labelId=\"dropdown-label\"\r\n//                     id=\"dropdown\"\r\n//                     value={selectedValue}\r\n//                     label=\"Select Role\"\r\n//                     onChange={handleChange}\r\n//                   >\r\n//                     {allTenants.map((tenant) => (\r\n//                       <MenuItem\r\n//                         // key={tenant._id} // Use the tenant's _id as the key\r\n//                         // value={tenant._id} // Assuming you want to set the tenant's _id as the value\r\n//                       >\r\n//                         {tenant} {/* Display the tenant's name */}\r\n//                       </MenuItem>\r\n//                     ))}\r\n//                   </Select>\r\n//                 </FormControl>\r\n\r\n//                 <br />\r\n//                 <br />\r\n\r\n//                 <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n//                   Create Property\r\n//                 </Button>\r\n//               </form>\r\n//             </CustomBox_For_Form>\r\n//           </Paper>\r\n//         </CustomBox>\r\n\r\n//         <Copyright />\r\n//       </Container>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default CreateProperties;\r\n\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Copyright from \"../../components/Copyright\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { FormControl, InputLabel, MenuItem, Select } from \"@mui/material\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport Count from \"../../context/Count\";\r\n\r\nconst CustomBox = styled(Box)({\r\n  padding: 10,\r\n});\r\n\r\nconst CustomBox_For_Form = styled(Box)({\r\n  paddingTop: 50,\r\n  paddingBottom: 50,\r\n  paddingLeft: 100,\r\n  paddingRight: 100,\r\n});\r\n\r\nconst getToken = () => {\r\n  return localStorage.getItem(\"authToken\");\r\n};\r\n\r\nfunction CreateProperties() {\r\n  const [propertyName, setPropertyName] = useState(\"\");\r\n  const [propertyAddress, setPropertyAddress] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [selectedtenant, setSelectedtenant] = useState(\"\");\r\n  const[selectlandlord, setselectlandlord] = useState(\"\");\r\n  const [title, setTitle] = useContext(Count);\r\n  const navigate = useNavigate();\r\n  const [allTenants, setAlltenants] = useState([]);\r\n  const [allLandlords, setAlllandlords] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setTitle(\"Create Property\");\r\n\r\n    const pageData = async () => {\r\n      const token = getToken();\r\n\r\n      try {\r\n        const apiUrl1 =\r\n          \"http://localhost:7000/users?role_id=66ab2e2ee525f1294827dbce\";\r\n        const apiUrl2 =\r\n          \"http://localhost:7000/users?role_id=66ab2e0be525f1294827dbcd\";\r\n\r\n        const [response1, response2] = await Promise.all([\r\n          fetch(apiUrl1, {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }),\r\n          fetch(apiUrl2, {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }),\r\n        ]);\r\n\r\n        if (!response1.ok || !response2.ok) {\r\n          throw new Error(\"One or both of the network responses were not ok\");\r\n        }\r\n\r\n        const data1 = await response1.json();\r\n        const data2 = await response2.json();\r\n        console.log(data1.users);\r\n        console.log(data2.users);\r\n\r\n        setAlltenants(data1.users);\r\n        setAlllandlords(data2.users);\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    };\r\n\r\n    pageData();\r\n  }, [setTitle]);\r\n\r\n  const handleChange1 = (event) => {\r\n  \r\n    setSelectedtenant(event.target.value);\r\n   \r\n\r\n  };\r\n  const handleChange2 = (event) => {\r\n  \r\n    \r\n    setselectlandlord(event.target.value);\r\n   \r\n\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // if (!role) {\r\n    //   toast.error(\"Please select a role.\");\r\n    //   return;\r\n    // }\r\n    const property = {\r\n      name: propertyName,\r\n      address: propertyAddress,\r\n      role_id: role,\r\n    };\r\n\r\n    try {\r\n      const token = getToken();\r\n      const response = await fetch(\"http://localhost:7000/properties\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(property),\r\n      });\r\n      if (response.ok) {\r\n        toast.success(\"Property created successfully!\");\r\n        setTimeout(() => {\r\n          navigate(\"/properties\");\r\n        }, 2000);\r\n        setPropertyName(\"\");\r\n        setPropertyAddress(\"\");\r\n        setRole(\"\");\r\n        setSelectedValue(\"\");\r\n      } else {\r\n        const errorData = await response.json();\r\n        toast.error(`Error: ${errorData.message}`);\r\n        throw new Error(errorData.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error creating property:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n        <CustomBox>\r\n          <Paper>\r\n            <ToastContainer />\r\n            <CustomBox_For_Form>\r\n              <form onSubmit={handleSubmit}>\r\n                <TextField\r\n                  label=\"Property Name\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  value={propertyName}\r\n                  onChange={(e) => setPropertyName(e.target.value)}\r\n                />\r\n\r\n                <TextField\r\n                  label=\"Property Address\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  value={propertyAddress}\r\n                  onChange={(e) => setPropertyAddress(e.target.value)}\r\n                />\r\n\r\n                <FormControl fullWidth margin=\"normal\">\r\n                  <InputLabel id=\"landlord-dropdown-label\">Landlord</InputLabel>\r\n                  <Select\r\n                    labelId=\"landlord-dropdown-label\"\r\n                    id=\"landlord-dropdown\"\r\n                   value={selectlandlord}\r\n                    label=\"Select Role\"\r\n                    onChange={handleChange2}\r\n                  >\r\n                    {allLandlords.map((landlord) => (\r\n                      <MenuItem key={landlord._id} value={landlord.role_id}>\r\n                       \r\n                        {landlord.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n\r\n                <FormControl fullWidth margin=\"normal\">\r\n                  <InputLabel id=\"tenant-dropdown-label\">Tenant</InputLabel>\r\n                  <Select\r\n                    labelId=\"tenant-dropdown-label\"\r\n                    id=\"tenant-dropdown\"\r\n                    value={selectedtenant}\r\n                    label=\"Select Role\"\r\n                    onChange={handleChange1}\r\n                  >\r\n                    {allTenants.map((tenant) => (\r\n                      <MenuItem key={tenant._id} value={tenant.role_id}>\r\n                        {tenant.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n\r\n                <br />\r\n                <br />\r\n\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                  Create Property\r\n                </Button>\r\n              </form>\r\n            </CustomBox_For_Form>\r\n          </Paper>\r\n        </CustomBox>\r\n\r\n        <Copyright />\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateProperties;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,OAAOC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}