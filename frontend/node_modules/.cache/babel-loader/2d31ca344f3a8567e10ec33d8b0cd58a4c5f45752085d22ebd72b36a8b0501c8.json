{"ast":null,"code":"import { DEFAULT_X_AXIS_KEY, DEFAULT_Y_AXIS_KEY } from '../constants';\nimport { isBandScaleConfig, isPointScaleConfig } from '../models/axis';\nconst getAxisMessage = (axisDirection, axisId) => {\n  const axisName = `${axisDirection}-axis`;\n  const axisIdName = `${axisDirection}Axis`;\n  const axisDefaultKey = axisDirection === 'x' ? DEFAULT_X_AXIS_KEY : DEFAULT_Y_AXIS_KEY;\n  return axisId === axisDefaultKey ? `The first \\`${axisIdName}\\`` : `The ${axisName} with id \"${axisId}\"`;\n};\nexport function checkScaleErrors(verticalLayout, seriesId, xAxisId, xAxis, yAxisId, yAxis) {\n  const xAxisConfig = xAxis[xAxisId];\n  const yAxisConfig = yAxis[yAxisId];\n  const discreteAxisConfig = verticalLayout ? xAxisConfig : yAxisConfig;\n  const continuousAxisConfig = verticalLayout ? yAxisConfig : xAxisConfig;\n  const discreteAxisId = verticalLayout ? xAxisId : yAxisId;\n  const continuousAxisId = verticalLayout ? yAxisId : xAxisId;\n  const discreteAxisDirection = verticalLayout ? 'x' : 'y';\n  const continuousAxisDirection = verticalLayout ? 'y' : 'x';\n  if (!isBandScaleConfig(discreteAxisConfig)) {\n    throw new Error(`MUI X: ${getAxisMessage(discreteAxisDirection, discreteAxisId)} should be of type \"band\" to display the bar series of id \"${seriesId}\".`);\n  }\n  if (discreteAxisConfig.data === undefined) {\n    throw new Error(`MUI X: ${getAxisMessage(discreteAxisDirection, discreteAxisId)} should have data property.`);\n  }\n  if (isBandScaleConfig(continuousAxisConfig) || isPointScaleConfig(continuousAxisConfig)) {\n    throw new Error(`MUI X: ${getAxisMessage(continuousAxisDirection, continuousAxisId)} should be a continuous type to display the bar series of id \"${seriesId}\".`);\n  }\n}","map":{"version":3,"names":["DEFAULT_X_AXIS_KEY","DEFAULT_Y_AXIS_KEY","isBandScaleConfig","isPointScaleConfig","getAxisMessage","axisDirection","axisId","axisName","axisIdName","axisDefaultKey","checkScaleErrors","verticalLayout","seriesId","xAxisId","xAxis","yAxisId","yAxis","xAxisConfig","yAxisConfig","discreteAxisConfig","continuousAxisConfig","discreteAxisId","continuousAxisId","discreteAxisDirection","continuousAxisDirection","Error","data","undefined"],"sources":["C:/Users/amris/OneDrive/Desktop/Rambla/frontend/node_modules/@mui/x-charts/esm/BarChart/checkScaleErrors.js"],"sourcesContent":["import { DEFAULT_X_AXIS_KEY, DEFAULT_Y_AXIS_KEY } from '../constants';\nimport { isBandScaleConfig, isPointScaleConfig } from '../models/axis';\nconst getAxisMessage = (axisDirection, axisId) => {\n  const axisName = `${axisDirection}-axis`;\n  const axisIdName = `${axisDirection}Axis`;\n  const axisDefaultKey = axisDirection === 'x' ? DEFAULT_X_AXIS_KEY : DEFAULT_Y_AXIS_KEY;\n  return axisId === axisDefaultKey ? `The first \\`${axisIdName}\\`` : `The ${axisName} with id \"${axisId}\"`;\n};\nexport function checkScaleErrors(verticalLayout, seriesId, xAxisId, xAxis, yAxisId, yAxis) {\n  const xAxisConfig = xAxis[xAxisId];\n  const yAxisConfig = yAxis[yAxisId];\n  const discreteAxisConfig = verticalLayout ? xAxisConfig : yAxisConfig;\n  const continuousAxisConfig = verticalLayout ? yAxisConfig : xAxisConfig;\n  const discreteAxisId = verticalLayout ? xAxisId : yAxisId;\n  const continuousAxisId = verticalLayout ? yAxisId : xAxisId;\n  const discreteAxisDirection = verticalLayout ? 'x' : 'y';\n  const continuousAxisDirection = verticalLayout ? 'y' : 'x';\n  if (!isBandScaleConfig(discreteAxisConfig)) {\n    throw new Error(`MUI X: ${getAxisMessage(discreteAxisDirection, discreteAxisId)} should be of type \"band\" to display the bar series of id \"${seriesId}\".`);\n  }\n  if (discreteAxisConfig.data === undefined) {\n    throw new Error(`MUI X: ${getAxisMessage(discreteAxisDirection, discreteAxisId)} should have data property.`);\n  }\n  if (isBandScaleConfig(continuousAxisConfig) || isPointScaleConfig(continuousAxisConfig)) {\n    throw new Error(`MUI X: ${getAxisMessage(continuousAxisDirection, continuousAxisId)} should be a continuous type to display the bar series of id \"${seriesId}\".`);\n  }\n}"],"mappings":"AAAA,SAASA,kBAAkB,EAAEC,kBAAkB,QAAQ,cAAc;AACrE,SAASC,iBAAiB,EAAEC,kBAAkB,QAAQ,gBAAgB;AACtE,MAAMC,cAAc,GAAGA,CAACC,aAAa,EAAEC,MAAM,KAAK;EAChD,MAAMC,QAAQ,GAAG,GAAGF,aAAa,OAAO;EACxC,MAAMG,UAAU,GAAG,GAAGH,aAAa,MAAM;EACzC,MAAMI,cAAc,GAAGJ,aAAa,KAAK,GAAG,GAAGL,kBAAkB,GAAGC,kBAAkB;EACtF,OAAOK,MAAM,KAAKG,cAAc,GAAG,eAAeD,UAAU,IAAI,GAAG,OAAOD,QAAQ,aAAaD,MAAM,GAAG;AAC1G,CAAC;AACD,OAAO,SAASI,gBAAgBA,CAACC,cAAc,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAE;EACzF,MAAMC,WAAW,GAAGH,KAAK,CAACD,OAAO,CAAC;EAClC,MAAMK,WAAW,GAAGF,KAAK,CAACD,OAAO,CAAC;EAClC,MAAMI,kBAAkB,GAAGR,cAAc,GAAGM,WAAW,GAAGC,WAAW;EACrE,MAAME,oBAAoB,GAAGT,cAAc,GAAGO,WAAW,GAAGD,WAAW;EACvE,MAAMI,cAAc,GAAGV,cAAc,GAAGE,OAAO,GAAGE,OAAO;EACzD,MAAMO,gBAAgB,GAAGX,cAAc,GAAGI,OAAO,GAAGF,OAAO;EAC3D,MAAMU,qBAAqB,GAAGZ,cAAc,GAAG,GAAG,GAAG,GAAG;EACxD,MAAMa,uBAAuB,GAAGb,cAAc,GAAG,GAAG,GAAG,GAAG;EAC1D,IAAI,CAACT,iBAAiB,CAACiB,kBAAkB,CAAC,EAAE;IAC1C,MAAM,IAAIM,KAAK,CAAC,UAAUrB,cAAc,CAACmB,qBAAqB,EAAEF,cAAc,CAAC,8DAA8DT,QAAQ,IAAI,CAAC;EAC5J;EACA,IAAIO,kBAAkB,CAACO,IAAI,KAAKC,SAAS,EAAE;IACzC,MAAM,IAAIF,KAAK,CAAC,UAAUrB,cAAc,CAACmB,qBAAqB,EAAEF,cAAc,CAAC,6BAA6B,CAAC;EAC/G;EACA,IAAInB,iBAAiB,CAACkB,oBAAoB,CAAC,IAAIjB,kBAAkB,CAACiB,oBAAoB,CAAC,EAAE;IACvF,MAAM,IAAIK,KAAK,CAAC,UAAUrB,cAAc,CAACoB,uBAAuB,EAAEF,gBAAgB,CAAC,iEAAiEV,QAAQ,IAAI,CAAC;EACnK;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}