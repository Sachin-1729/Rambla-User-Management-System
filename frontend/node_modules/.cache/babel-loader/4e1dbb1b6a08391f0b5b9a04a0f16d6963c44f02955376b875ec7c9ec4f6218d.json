{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amris\\\\OneDrive\\\\Desktop\\\\Rambla\\\\frontend\\\\src\\\\components\\\\layouts\\\\Guestlayout.jsx\",\n  _s = $RefreshSig$();\n// import React,{useContext, useEffect} from \"react\";\n// import AuthContext from \"../providers/AuthProvider\";\n// import { Outlet, Navigate, useNavigate } from \"react-router-dom\";\n// import { isLogin } from \"../../auth\";\n\n// function Guestlayout() {\n//   const { user } = useContext(AuthContext);\n//   useEffect(()=>{\n//     const x = useNavigate();\n//     if (!isLogin()) {\n//       return <Outlet />;\n\n//     } else {\n//      x('/');\n\n//      // <Navigate to=\"/\" replace={true} />;\n\n//     }\n\n//   })\n\n// }\n\n// export default Guestlayout;\n// import React, { useContext, useEffect } from \"react\";\n// import { Outlet, Navigate, useNavigate } from \"react-router-dom\";\n// import AuthContext from \"../providers/AuthProvider\";\n// import { isLogin } from \"../../auth\";\n\n// function Guestlayout() {\n//   const { user } = useContext(AuthContext);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     if (isLogin()) {\n//         <Navigate to=\"/\"></Navigate>\n//      // navigate('/'); // Redirect to home if logged in\n//     }\n//   }, [navigate]);\n\n//   // If user is not logged in, render the children components\n//   if (!isLogin()) {\n//     return <Outlet />;\n//   }\n\n//   // Optionally, you could return null or a loading spinner while redirecting\n//   return null;\n// }\n\n// export default Guestlayout;\n\nimport React, { useContext } from \"react\";\nimport { Outlet, Navigate } from \"react-router-dom\";\nimport AuthContext from \"../providers/AuthProvider\";\nimport { isLogin } from \"../../auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Guestlayout() {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n\n  // If the user is logged in, navigate to the home page\n  if (isLogin()) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Otherwise, render the nested routes\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 10\n  }, this);\n}\n_s(Guestlayout, \"y3FQDew7UyrSqYkvQcTdCsLbAB8=\");\n_c = Guestlayout;\nexport default Guestlayout;\nvar _c;\n$RefreshReg$(_c, \"Guestlayout\");","map":{"version":3,"names":["React","useContext","Outlet","Navigate","AuthContext","isLogin","jsxDEV","_jsxDEV","Guestlayout","_s","user","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/amris/OneDrive/Desktop/Rambla/frontend/src/components/layouts/Guestlayout.jsx"],"sourcesContent":["// import React,{useContext, useEffect} from \"react\";\r\n// import AuthContext from \"../providers/AuthProvider\";\r\n// import { Outlet, Navigate, useNavigate } from \"react-router-dom\";\r\n// import { isLogin } from \"../../auth\";\r\n\r\n// function Guestlayout() {\r\n//   const { user } = useContext(AuthContext);\r\n//   useEffect(()=>{\r\n//     const x = useNavigate();\r\n//     if (!isLogin()) {\r\n//       return <Outlet />;\r\n      \r\n//     } else {\r\n//      x('/');\r\n      \r\n//      // <Navigate to=\"/\" replace={true} />;\r\n    \r\n//     }\r\n\r\n//   })\r\n\r\n// }\r\n\r\n// export default Guestlayout;\r\n// import React, { useContext, useEffect } from \"react\";\r\n// import { Outlet, Navigate, useNavigate } from \"react-router-dom\";\r\n// import AuthContext from \"../providers/AuthProvider\";\r\n// import { isLogin } from \"../../auth\";\r\n\r\n// function Guestlayout() {\r\n//   const { user } = useContext(AuthContext);\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     if (isLogin()) {\r\n//         <Navigate to=\"/\"></Navigate>\r\n//      // navigate('/'); // Redirect to home if logged in\r\n//     }\r\n//   }, [navigate]);\r\n\r\n//   // If user is not logged in, render the children components\r\n//   if (!isLogin()) {\r\n//     return <Outlet />;\r\n//   }\r\n\r\n//   // Optionally, you could return null or a loading spinner while redirecting\r\n//   return null;\r\n// }\r\n\r\n// export default Guestlayout;\r\n\r\nimport React, { useContext } from \"react\";\r\nimport { Outlet, Navigate } from \"react-router-dom\";\r\nimport AuthContext from \"../providers/AuthProvider\";\r\nimport { isLogin } from \"../../auth\";\r\n\r\nfunction Guestlayout() {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  // If the user is logged in, navigate to the home page\r\n  if (isLogin()) {\r\n    return <Navigate to=\"/\" replace  = {true}/>;\r\n  }\r\n\r\n  // Otherwise, render the nested routes\r\n  return <Outlet />;\r\n}\r\n\r\nexport default Guestlayout;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,MAAM,EAAEC,QAAQ,QAAQ,kBAAkB;AACnD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,OAAO,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAK,CAAC,GAAGT,UAAU,CAACG,WAAW,CAAC;;EAExC;EACA,IAAIC,OAAO,CAAC,CAAC,EAAE;IACb,oBAAOE,OAAA,CAACJ,QAAQ;MAACQ,EAAE,EAAC,GAAG;MAACC,OAAO,EAAK;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAC7C;;EAEA;EACA,oBAAOT,OAAA,CAACL,MAAM;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnB;AAACP,EAAA,CAVQD,WAAW;AAAAS,EAAA,GAAXT,WAAW;AAYpB,eAAeA,WAAW;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}